{"version":3,"sources":["components/Header.js","components/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","comparedData","setComparedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","borderColor","last","length","options","legend","display","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAceA,EAZA,WACb,OACE,yBAAQC,UAAU,SAAlB,UACE,0CACA,mCACE,kDACA,yD,0DCgIOC,EApIE,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBACdC,EADc,KACCC,EADD,OAEyBF,mBAAS,IAFlC,mBAEdG,EAFc,KAEGC,EAFH,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,KAoFrB,OA/EAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,4BAAAC,EAAA,sEACAC,IAAMC,IACtB,sDAFgB,OACZC,EADY,OAIlBC,EAASD,EAAIE,MAJK,2CAAH,qDAOXD,EAAW,SAACE,GAChB,IAAMC,EAAMD,EAAME,QAAO,SAACC,EAAKC,GAC7B,IAAMC,EAAc,IAAIC,KAAKF,EAAIE,MAC3BC,EAAOF,EAAYG,cACnBC,EAAQJ,EAAYK,WACpBC,EAAON,EAAYO,UACnBC,EAAYT,EAAIU,UAChBC,EAASX,EAAIY,OACbC,EAAQb,EAAIc,OACZC,EAAYf,EAAIgB,UAEhBC,EAAWlB,EAAImB,MAAK,SAAC5B,GAAD,OAAOA,EAAEa,OAASA,GAAQb,EAAEe,QAAUA,KAehE,OAbKY,GACHlB,EAAIoB,KAAK,CAAEhB,OAAME,QAAOE,OAAME,YAAWE,SAAQE,QAAOE,cAEtDE,GAAYA,EAASV,KAAOA,IAC9BU,EAASN,OAASA,EAClBM,EAASJ,MAAQA,EACjBI,EAASd,KAAOA,EAChBc,EAASZ,MAAQA,EACjBY,EAASV,KAAOA,EAChBU,EAASR,UAAYA,EACrBQ,EAASF,UAAYA,GAGhBhB,IACN,IAEGqB,EAASvB,EAAIwB,KAAI,SAAC/B,GAAD,gBAAUA,EAAEe,MAAQ,EAApB,cACvBtB,EAAiB,CACfqC,SACAE,SAAU,CACR,CACEC,MAAO,+CACPC,gBAAiB,SACjBC,MAAM,EACN9B,KAAME,EAAIwB,KAAI,SAAC/B,GAAD,OAAOA,EAAEmB,iBAK7BxB,EAAmB,CACjBmC,SACAE,SAAU,CACR,CACEC,MAAO,+CACPG,YAAa,UACbD,MAAM,EACN9B,KAAME,EAAIwB,KAAI,SAAC/B,GAAD,OAAOA,EAAEqB,cAK7B,IAAMgB,EAAO9B,EAAIA,EAAI+B,OAAS,GAC9BzC,EAAgB,CACdiC,OAAQ,CAAC,qBAAO,2BAAQ,gBACxBE,SAAU,CACR,CACEC,MAAO,qEACPG,YAAa,CAAC,UAAW,UAAW,WACpCF,gBAAiB,CAAC,UAAW,UAAW,WACxCC,MAAM,EACN9B,KAAM,CAACgC,EAAKlB,UAAWkB,EAAKZ,UAAWY,EAAKd,YAMpDxB,MACC,IAED,oCACE,8EACA,qBAAKV,UAAU,WAAf,SACE,gCACE,cAAC,MAAD,CACEgB,KAAMb,EACN+C,QAKE,CAAEC,OAAQ,CAAEC,SAAS,EAAMC,SAAU,aAIzC,cAAC,OAAD,CACErC,KAAMX,EACN6C,QAKE,CAAEC,OAAQ,CAAEC,SAAS,EAAMC,SAAU,aAIzC,cAAC,WAAD,CACErC,KAAMT,EACN2C,SAIW,0DAAD,QACF,IAAI3B,MAAOI,WAAa,EADtB,WAMR,CAAEwB,OAAQ,CAAEC,SAAS,EAAMC,SAAU,uBClHpCC,MATf,WACE,OACE,sBAAKtD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f41f0ed6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>COVID-19</h1>\r\n      <select>\r\n        <option>국내</option>\r\n        <option>세계</option>\r\n      </select>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Bar, Doughnut, Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\n\r\nconst Contents = () => {\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [quarantinedData, setQuarantinedData] = useState({});\r\n  const [comparedData, setComparedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      const res = await axios.get(\r\n        \"https://api.covid19api.com/total/dayone/country/kr\"\r\n      );\r\n      makeData(res.data);\r\n    };\r\n\r\n    const makeData = (items) => {\r\n      const arr = items.reduce((acc, cur) => {\r\n        const currentDate = new Date(cur.Date);\r\n        const year = currentDate.getFullYear();\r\n        const month = currentDate.getMonth();\r\n        const date = currentDate.getDate();\r\n        const confirmed = cur.Confirmed;\r\n        const active = cur.Active;\r\n        const death = cur.Deaths;\r\n        const recovered = cur.Recovered;\r\n\r\n        const findItem = acc.find((a) => a.year === year && a.month === month);\r\n\r\n        if (!findItem) {\r\n          acc.push({ year, month, date, confirmed, active, death, recovered });\r\n        }\r\n        if (findItem && findItem.date < date) {\r\n          findItem.active = active;\r\n          findItem.death = death;\r\n          findItem.year = year;\r\n          findItem.month = month;\r\n          findItem.date = date;\r\n          findItem.confirmed = confirmed;\r\n          findItem.recovered = recovered;\r\n        }\r\n\r\n        return acc;\r\n      }, []);\r\n\r\n      const labels = arr.map((a) => `${a.month + 1} 월`);\r\n      setConfirmedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"국내 누적 확진자\",\r\n            backgroundColor: \"salmon\",\r\n            fill: true,\r\n            data: arr.map((a) => a.confirmed),\r\n          },\r\n        ],\r\n      });\r\n\r\n      setQuarantinedData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: \"월별 격리자 현황\",\r\n            borderColor: \"#36BC9B\",\r\n            fill: false,\r\n            data: arr.map((a) => a.active),\r\n          },\r\n        ],\r\n      });\r\n\r\n      const last = arr[arr.length - 1];\r\n      setComparedData({\r\n        labels: [\"확진자\", \"격리해제\", \"사망\"],\r\n        datasets: [\r\n          {\r\n            label: \"누적 확진, 해제, 사망 비율\",\r\n            borderColor: [\"#FF3D67\", \"#059BFF\", \"#FFC233\"],\r\n            backgroundColor: [\"#FF3D67\", \"#059BFF\", \"#FFC233\"],\r\n            fill: false,\r\n            data: [last.confirmed, last.recovered, last.death],\r\n          },\r\n        ],\r\n      });\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n  return (\r\n    <section>\r\n      <h2>국내 코로나 현황</h2>\r\n      <div className=\"contents\">\r\n        <div>\r\n          <Bar\r\n            data={confirmedData}\r\n            options={\r\n              ({\r\n                title: { display: true, text: \"누적 확진자 추이\" },\r\n                fontSize: 16,\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n\r\n          <Line\r\n            data={quarantinedData}\r\n            options={\r\n              ({\r\n                title: { display: true, text: \"월별 격리자 현황\" },\r\n                fontSize: 16,\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n\r\n          <Doughnut\r\n            data={comparedData}\r\n            options={\r\n              ({\r\n                title: {\r\n                  display: true,\r\n                  text: `누적 확진, 해제, 사망 (${\r\n                    new Date().getMonth() + 1\r\n                  }월)`,\r\n                },\r\n                fontSize: 16,\r\n              },\r\n              { legend: { display: true, position: \"bottom\" } })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contents;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Contents from \"./components/Contents\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Contents />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}